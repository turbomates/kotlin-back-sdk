# This workflow performs a static analysis of your Kotlin source code using
# Detekt.
#
# Scans are triggered:
# 1. On every push to default and protected branches
# 2. On every Pull Request targeting the default branch
# 3. On a weekly schedule
# 4. Manually, on demand, via the "workflow_dispatch" event
#
# The workflow should work with no modifications, but you might like to use a
# later version of the Detekt CLI by modifing the $DETEKT_RELEASE_TAG
# environment variable.
name: Scan with Detekt

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "scan"
  scan:
    name: Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # Sets up the detekt cli
    - name: Setup Detekt
      run: |
        dest=$( mktemp -d )
        curl --request GET \
          --url https://github.com/detekt/detekt/releases/download/v1.21.0-RC1/detekt-cli-1.21.0-RC1-all.jar \
          --silent \
          --location \
          --output detekt.jar
        chmod a+x detekt.jar
    - name: Setup Detekt Formatting plugin
      run: |
        curl --request GET \
          --url https://github.com/detekt/detekt/releases/download/v1.21.0-RC1/detekt-formatting-1.21.0-RC1.jar \
          --silent \
          --location \
          --output formatting.jar
        chmod a+x detekt.jar
    - name: Copy config
      run: |
        curl --request GET \
          --url https://raw.githubusercontent.com/turbomates/kotlin-back-sdk/main/detekt.yml \
          --silent \
          --location \
          --output detekt.yml

    # Performs static analysis using Detekt
    - name: Run Detekt
      continue-on-error: true
      run: |
       java -jar detekt.jar  --plugins formatting.jar --input ${{ github.workspace }}  --config detekt.yml --report sarif:${{ github.workspace }}/detekt.sarif.json

    # Modifies the SARIF output produced by Detekt so that absolute URIs are relative
    # This is so we can easily map results onto their source files
    # This can be removed once relative URI support lands in Detekt: https://git.io/JLBbA
    - name: Make artifact location URIs relative
      continue-on-error: true
      run: |
        echo "$(
          jq \
            --arg github_workspace ${{ github.workspace }} \
            '. | ( .runs[].results[].locations[].physicalLocation.artifactLocation.uri |= if test($github_workspace) then .[($github_workspace | length | . + 1):] else . end )' \
            ${{ github.workspace }}/detekt.sarif.json
        )" > ${{ github.workspace }}/detekt.sarif.json

    # Uploads results to GitHub repository using the upload-sarif action
    - uses: github/codeql-action/upload-sarif@v3
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: ${{ github.workspace }}/detekt.sarif.json
        checkout_path: ${{ github.workspace }}
